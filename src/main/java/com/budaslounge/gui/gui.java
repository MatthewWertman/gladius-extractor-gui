package com.budaslounge.gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class gui extends JFrame {
    private JPanel MainPanel;
    private JSplitPane SplitPane;
    private JTextPane ConsolePane;
    private JPanel ActionPanel;
    private JComboBox gameVersionBox;
    private JLabel gameVersionText;
    private JButton runToolButton;
    private JLabel toolText;
    private JLabel isoToolText;
    private JLabel archiveToolText;
    private JRadioButton ngcisoRadioButton;
    private JRadioButton psisoRadioButton;
    private JRadioButton becToolRadioButton;
    private JRadioButton pakToolRadioButton;
    private JRadioButton tokToolRadioButton;
    private JRadioButton zlibToolRadioButton;
    private ButtonGroup archiveButtonGrp;
    private ButtonGroup isoButtonGrp;

    public gui() {
        MainPanel.addComponentListener(new ComponentAdapter() {
            public void componentResized(ComponentEvent componentEvent) {
                JPanel f = (JPanel) componentEvent.getComponent();
                JSplitPane splitPane = (JSplitPane) f.getComponents()[0];
                Dimension frameSize = componentEvent.getComponent().getBounds().getSize();
                splitPane.setDividerLocation(frameSize.width / 3);
            }
        });
        gameVersionBox.addItemListener(itemEvent -> {
            if (itemEvent.getStateChange() == ItemEvent.SELECTED) {
                if (itemEvent.getItem() == "GameCube") {
                    psisoRadioButton.setEnabled(false);
                    ngcisoRadioButton.setEnabled(true);
                    ngcisoRadioButton.setSelected(true);
                } else if (itemEvent.getItem() == "PlayStation") {
                    ngcisoRadioButton.setEnabled(false);
                    psisoRadioButton.setEnabled(true);
                    psisoRadioButton.setSelected(true);
                } else {
                    psisoRadioButton.setEnabled(true);
                    ngcisoRadioButton.setEnabled(true);
                    isoButtonGrp.clearSelection();
                }
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        MainPanel = new JPanel();
        MainPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        MainPanel.setMinimumSize(new Dimension(500, 500));
        MainPanel.setPreferredSize(new Dimension(850, 500));
        SplitPane = new JSplitPane();
        SplitPane.setDividerLocation(420);
        SplitPane.setDividerSize(5);
        MainPanel.add(SplitPane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(200, 200), null, 0, false));
        ConsolePane = new JTextPane();
        ConsolePane.setEditable(false);
        ConsolePane.setText("Console output goes here..");
        SplitPane.setRightComponent(ConsolePane);
        ActionPanel = new JPanel();
        ActionPanel.setLayout(new GridLayoutManager(10, 2, new Insets(0, 0, 0, 0), -1, -1));
        SplitPane.setLeftComponent(ActionPanel);
        final Spacer spacer1 = new Spacer();
        ActionPanel.add(spacer1, new GridConstraints(8, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        gameVersionText = new JLabel();
        gameVersionText.setText("Game Version");
        ActionPanel.add(gameVersionText, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        runToolButton = new JButton();
        runToolButton.setText("Run Tool");
        ActionPanel.add(runToolButton, new GridConstraints(9, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        toolText = new JLabel();
        toolText.setText("Tools");
        ActionPanel.add(toolText, new GridConstraints(2, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(37, 33), null, 0, false));
        isoToolText = new JLabel();
        isoToolText.setText("ISOs");
        ActionPanel.add(isoToolText, new GridConstraints(3, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
        archiveToolText = new JLabel();
        archiveToolText.setText("Archives");
        ActionPanel.add(archiveToolText, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
        ngcisoRadioButton = new JRadioButton();
        ngcisoRadioButton.setText("Ngciso Tool");
        ActionPanel.add(ngcisoRadioButton, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        gameVersionBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("");
        defaultComboBoxModel1.addElement("GameCube");
        defaultComboBoxModel1.addElement("PlayStation");
        gameVersionBox.setModel(defaultComboBoxModel1);
        ActionPanel.add(gameVersionBox, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(125, 27), null, 0, false));
        psisoRadioButton = new JRadioButton();
        psisoRadioButton.setText("Psiso Tool");
        ActionPanel.add(psisoRadioButton, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        becToolRadioButton = new JRadioButton();
        becToolRadioButton.setText("Bec Tool");
        ActionPanel.add(becToolRadioButton, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pakToolRadioButton = new JRadioButton();
        pakToolRadioButton.setText("Pak Tool");
        ActionPanel.add(pakToolRadioButton, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        tokToolRadioButton = new JRadioButton();
        tokToolRadioButton.setText("Tok Tool");
        ActionPanel.add(tokToolRadioButton, new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        zlibToolRadioButton = new JRadioButton();
        zlibToolRadioButton.setText("Zlib Tool");
        ActionPanel.add(zlibToolRadioButton, new GridConstraints(7, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        isoButtonGrp = new ButtonGroup();
        isoButtonGrp.add(ngcisoRadioButton);
        isoButtonGrp.add(psisoRadioButton);
        archiveButtonGrp = new ButtonGroup();
        archiveButtonGrp.add(becToolRadioButton);
        archiveButtonGrp.add(pakToolRadioButton);
        archiveButtonGrp.add(tokToolRadioButton);
        archiveButtonGrp.add(zlibToolRadioButton);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return MainPanel;
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("gui");
        frame.setContentPane(new gui().MainPanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setMinimumSize(new Dimension(500, 500));
        frame.pack();
        frame.setVisible(true);
    }
}
